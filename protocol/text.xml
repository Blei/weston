<protocol name="text">
  <interface name="text_model" version="1">
    <request name="set_surrounding_text">
      <arg name="text" type="string"/>
    </request>
    <request name="set_cursor_index">
      <arg name="index" type="uint"/>
    </request>
    <request name="activate"/>
    <request name="deactivate"/>
    <request name="set_selected_text">
      <arg name="text" type="string"/>
      <arg name="index" type="int"/>
    </request>
    <request name="set_micro_focus">
      <arg name="x" type="int"/>
      <arg name="y" type="int"/>
      <arg name="width" type="int"/>
      <arg name="height" type="int"/>
    </request>
    <request name="set_preedit"/>
    <request name="set_content_type"/>

    <event name="commit_string">
      <arg name="text" type="string"/>
      <arg name="index" type="uint"/>
    </event>
    <event name="preedit_string">
      <description summary="update the preedit string">
        Replaces the current preedit string. All existing preedit styles have
        to be dropped.
      </description>
      <arg name="text" type="string"/>
      <arg name="index" type="uint"/>
    </event>

    <enum name="preedit_style_type">
      <description summary="the type of a preedit style">
        The type of the preedit style. Depending on the type, the value of the
        event contains different data.

        "underline": The value is of type preedit_underline_type.

        "foreground" and "background": the value is a color in the format "0RGB"
        from MSB to LSB.
      </description>
      <entry name="underline" value="0"/>
      <entry name="foreground" value="1"/>
      <entry name="background" value="2"/>
    </enum>

    <enum name="preedit_underline_type">
      <entry name="none" value="0"/>
      <entry name="single" value="1"/>
      <entry name="double" value="2"/>
      <entry name="low" value="3"/>
      <entry name="error" value="4"/>
    </enum>

    <event name="preedit_styling">
      <description summary="adds a new preedit style component">
        Adds a new preedit style component to the current preedit string.
        All existing preedit styles must be dropped when a new preedit string
        is received.

        start and end are in number of bytes.
      </description>
      <arg name="type" type="uint"/>
      <arg name="value" type="uint"/>
      <arg name="start" type="uint"/>
      <arg name="end" type="uint"/>
    </event>

    <event name="key"/>
    <event name="selection_replacement"/>
    <event name="direction"/>
    <event name="locale"/>      
  </interface>

  <interface name="text_model_manager" version="1">
    <request name="create_text_model">
      <arg name="id" type="new_id" interface="text_model"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>
  </interface>

  <interface name="input_method" version="1">
    <request name="request_keyboard">
      <arg name="keyboard" type="new_id" interface="wl_keyboard"/>
    </request>

    <event name="create_context">
      <arg name="id" type="new_id" interface="input_method_context"/>
    </event>
  </interface>

  <interface name="input_method_context" version="1">
    <request name="commit_string">
      <arg name="text" type="string"/>
      <arg name="index" type="uint"/>
    </request>
    <request name="preedit_string">
      <arg name="text" type="string"/>
      <arg name="index" type="uint"/>
    </request>
    <request name="preedit_styling">
      <arg name="type" type="uint"/>
      <arg name="value" type="uint"/>
      <arg name="start" type="uint"/>
      <arg name="end" type="uint"/>
    </request>
    <request name="forward_key">
      <arg name="time" type="uint"/>
      <arg name="key" type="uint"/>
      <arg name="state" type="uint"/>
    </request>

    <event name="focus_in"/>
    <event name="focus_out"/>
    <event name="reset"/>
    <event name="destroy_me"/>
  </interface>
</protocol>
